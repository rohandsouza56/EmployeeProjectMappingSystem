[{"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\App.js":"3","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\login.js":"4","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Projects\\project.js":"5","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Projects\\projectdetails.js":"6","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\ProjectService.js":"7","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Employees\\Employee.js":"8","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Skills\\skill.js":"9","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\SkillService.js":"10","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Technology\\AddTechnology.jsx":"11","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Departments\\AddDepartment.js":"12","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\DepartmentService.js":"13","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\TechnologyService.js":"14","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\AdminDashboard\\AdminDashboard.js":"15"},{"size":685,"mtime":1662901662138,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1662526238280,"results":"18","hashOfConfig":"17"},{"size":1458,"mtime":1662906772835,"results":"19","hashOfConfig":"17"},{"size":3252,"mtime":1662874804254,"results":"20","hashOfConfig":"17"},{"size":9068,"mtime":1662655055125,"results":"21","hashOfConfig":"17"},{"size":2541,"mtime":1662557650521,"results":"22","hashOfConfig":"17"},{"size":561,"mtime":1662654211782,"results":"23","hashOfConfig":"17"},{"size":21217,"mtime":1662784785293,"results":"24","hashOfConfig":"17"},{"size":17303,"mtime":1662792437839,"results":"25","hashOfConfig":"17"},{"size":697,"mtime":1662791662515,"results":"26","hashOfConfig":"17"},{"size":5999,"mtime":1662901871217,"results":"27","hashOfConfig":"17"},{"size":14376,"mtime":1662902061889,"results":"28","hashOfConfig":"17"},{"size":768,"mtime":1662902440885,"results":"29","hashOfConfig":"17"},{"size":569,"mtime":1662902439751,"results":"30","hashOfConfig":"17"},{"size":6674,"mtime":1662921630481,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"iu04v8",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":23,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\index.js",["83"],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\App.js",["84"],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\login.js",[],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Projects\\project.js",["85"],[],"import React, {useState, useEffect} from 'react'\r\nimport ProjectService from '../../Services/ProjectService';\r\n\r\n\r\n\r\nconst AddProjects = () => {\r\n  \r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [managerId, setManagerId] = useState(\"\");\r\n\r\n  const [nameErr, setNameErr] = useState(\"\");\r\n  const [descriptionErr, setDescriptionErr] = useState(\"\");\r\n  const [startDateErr, setStartDateErr] = useState(\"\");\r\n  const [endDateErr, setEndDateErr] = useState(\"\");\r\n  const [locationErr, setLocationErr] = useState(\"\");\r\n  const [managerIdErr, setManagerIdErr] = useState(\"\");\r\n\r\n  const [errorMesg, setErrorMesg] = useState(\"\");\r\n  \r\n \r\n  let nameTextHandler = (event) => {\r\n    if(nameErr!==\"\" || nameErr!==null) setNameErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setName(event.target.value.toUpperCase());\r\n  };\r\n\r\n  let descriptionTextHandler = (event) => {\r\n    if(descriptionErr!==\"\" || descriptionErr!==null) setDescriptionErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  let startDateTextHandler = (event) => {\r\n    if(startDateErr!==\"\" || startDateErr!==null) setStartDateErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setStartDate(event.target.value);\r\n  };\r\n\r\n  let endDateTextHandler = (event) => {\r\n    if(endDateErr!==\"\" || endDateErr!==null) setEndDateErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setEndDate(event.target.value);\r\n  };\r\n\r\n  let locationTextHandler = (event) => {\r\n    if(locationErr!==\"\" || locationErr!==null) setLocationErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setLocation(event.target.value);\r\n  };\r\n\r\n  let managerIdTextHandler = (event) => {\r\n    if(managerIdErr!==\"\" || managerIdErr!==null) setManagerIdErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setManagerId(event.target.value);\r\n  };\r\n\r\n\r\n  let validation = () => {\r\n    setNameErr(\"\");\r\n    setDescriptionErr(\"\");\r\n    setStartDateErr(\"\");\r\n    setEndDateErr(\"\");\r\n    setLocationErr(\"\");\r\n    setManagerIdErr(\"\");\r\n    let flag = true;\r\n   \r\n    if (name === \"\" || name === null) {\r\n      setNameErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n    if (description === \"\" || description === null) {\r\n      setDescriptionErr(\"This field is compulsory\");\r\n      flag = false;\r\n    } \r\n\r\n    if (startDate === \"\" || startDate === null) {\r\n      setStartDateErr(\"This field is compulsory\");\r\n      flag = false;\r\n    } \r\n\r\n    if (endDate === \"\" || endDate === null) {\r\n      setEndDateErr(\"This field is compulsory\");\r\n      flag = false;\r\n    } \r\n\r\n    if (location === \"\" || location === null) {\r\n      setLocationErr(\"This field is compulsory\");\r\n      flag = false;\r\n    } \r\n    if (managerId === \"\" || managerId === null) {\r\n      setManagerIdErr(\"This field is compulsory\");\r\n      flag = false;\r\n    } \r\n  \r\n\r\n    if (flag) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  let addProjectDetails = (event) => {\r\n    event.preventDefault();\r\n    if (validation() === true) {\r\n      let projectDetails = {\r\n        name,\r\n        description,\r\n        startDate,\r\n        endDate,\r\n        location,\r\n        managerId\r\n      };\r\n      ProjectService\r\n      .addNewProject(projectDetails)\r\n      .then((response) => {\r\n        setName(\"\");\r\n        setDescription(\"\");\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n        setLocation(\"\");\r\n        setManagerId(\"\");\r\n  \r\n        // setSuccessMesg(\"User Created Successfully\");\r\n       // window.sessionStorage.setItem(\"snackbar_registration\",\"show\");\r\n        //toastr.success(\"Student Profile Created Successfully\");\r\n        //navigate(\"/login\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        setErrorMesg(error.response.data);\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {/* {loggedInStudentFalse && <Navigate to=\"/home\" />}\r\n          {studentProfileUpdated && <Navigate to=\"/student_dashboard\" />} */}\r\n          <div className=\"container-fluid w-50 mt-5 add-details-section\">\r\n            <div className=\"m-3\">\r\n              <h2 className=\"fw-bold mb-2 text-uppercase dashboard-data-section-heading\">\r\n                Add Project Details\r\n              </h2>\r\n              <p className=\"text-50 text-success mb-3 dashboard-data-section-para\">\r\n                Please fill up the form\r\n              </p>\r\n              <div className=\"border border-1 rounded\">\r\n                <div className=\"m-3\">\r\n                  <form onSubmit={addProjectDetails}>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                        onChange={nameTextHandler}\r\n                        placeholder=\"Enter Project Name\"\r\n                        \r\n                      />\r\n                      <label>Project Name</label>\r\n                      <span className=\"text-danger\">{nameErr}</span>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={description}\r\n                        onChange={descriptionTextHandler}\r\n                        placeholder=\"Enter Description\"\r\n                        \r\n                      />\r\n                      <label>Description</label>\r\n                      <span className=\"text-danger\">{descriptionErr}</span>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        value={startDate}\r\n                        onChange={startDateTextHandler}\r\n                        placeholder=\"Enter startdate\"\r\n                        \r\n                      />\r\n                      <label>Start Date</label>\r\n                      <span className=\"text-danger\">{startDateErr}</span>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        value={endDate}\r\n                        onChange={endDateTextHandler}\r\n                        placeholder=\"End date\"\r\n                      />\r\n                      <label>End Date</label>\r\n                      <span className=\"text-danger\">{endDateErr}</span>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={location}\r\n                        onChange={locationTextHandler}\r\n                        placeholder=\"Enter location\"\r\n                      />\r\n                      <label>Location</label>\r\n                      <span className=\"text-danger\">{locationErr}</span>\r\n                    </div>\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={managerId}\r\n                        onChange={managerIdTextHandler}\r\n                        placeholder=\"Enter Manager Id\"\r\n                      />\r\n                      <label>ManagerId</label>\r\n                      <span className=\"text-danger\">{managerIdErr}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"row g-1\">\r\n                      <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Add Project\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n              {/* <span className=\"text-success\">\r\n                <b>{successMesg}</b>\r\n              </span>\r\n              <span className=\"text-danger\">\r\n                <b>{errorMesg}</b>\r\n              </span> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    export default AddProjects;\r\n    ","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Projects\\projectdetails.js",[],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\ProjectService.js",["86"],[],"import axios from 'axios'\r\n\r\nconst Project_BASE_REST_API_URL = 'http://localhost:8082/admin/';\r\n\r\n// class ProjectService{\r\n\r\n//     getAllProjects(){\r\n//         return axios.get(Project_BASE_REST_API_URL + 'projects')\r\n//     }\r\n\r\n   \r\n    \r\n// }\r\nconst getAllProjects = () =>{\r\n    return axios.get(Project_BASE_REST_API_URL + 'projects')\r\n}\r\nconst addNewProject = (projectDetails) =>{\r\n    return axios.post(Project_BASE_REST_API_URL + 'addproject',projectDetails);\r\n}\r\n// export default new ProjectService();\r\nexport default {getAllProjects,addNewProject};","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Employees\\Employee.js",["87","88","89","90"],[],"import React, { useState, useEffect } from \"react\";\r\n// import EmployeeService from '../../Services/EmployeeService';\r\n\r\nconst AddEmployees = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [dateOfJoining, setDateOfJoining] = useState(\"\");\r\n  const [mobileNo, setMobileNo] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [panNumber, setPanNumber] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [projectId, setProjectId] = useState(\"\");\r\n  const [departmentId, setDepartmentId] = useState(\"\");\r\n  const [isManager, setIsManager] = useState(\"\");\r\n  const [managerId, setManagerId] = useState(\"\");\r\n  const [skillId, setSkillId] = useState(\"\");\r\n  const [resume, setResume] = useState(\"\");\r\n  const [isTagged, setIsTagged] = useState(\"\");\r\n\r\n  const [nameErr, setNameErr] = useState(\"\");\r\n  const [designationErr, setDesignationErr] = useState(\"\");\r\n  const [dateOfJoiningErr, setDateOfJoiningErr] = useState(\"\");\r\n  const [mobileNoErr, setMobileNoErr] = useState(\"\");\r\n  const [emailErr, setEmailErr] = useState(\"\");\r\n  const [panNumberErr, setPanNumberErr] = useState(\"\");\r\n  const [genderErr, setGenderErr] = useState(\"\");\r\n  const [userNameErr, setUserNameErr] = useState(\"\");\r\n  const [passwordErr, setPasswordErr] = useState(\"\");\r\n  const [projectIdErr, setProjectIdErr] = useState(\"\");\r\n  const [departmentIdErr, setDepartmentIdErr] = useState(\"\");\r\n  const [isManagerErr, setIsManagerErr] = useState(\"\");\r\n  const [managerIdErr, setManagerIdErr] = useState(\"\");\r\n  const [skillIdErr, setSkillIdErr] = useState(\"\");\r\n  const [resumeErr, setResumeErr] = useState(\"\");\r\n  const [isTaggedErr, setIsTaggedErr] = useState(\"\");\r\n\r\n  const [errorMesg, setErrorMesg] = useState(\"\");\r\n\r\n  let nameTextHandler = (event) => {\r\n    if (nameErr !== \"\" || nameErr !== null) setNameErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setName(event.target.value.toUpperCase());\r\n  };\r\n\r\n  let designationTextHandler = (event) => {\r\n    if (designationErr !== \"\" || designationErr !== null) setDesignationErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setDesignation(event.target.value);\r\n  };\r\n\r\n  let dateOfJoiningTextHandler = (event) => {\r\n    if (dateOfJoiningErr !== \"\" || dateOfJoiningErr !== null)\r\n      setDateOfJoiningErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setDateOfJoining(event.target.value);\r\n  };\r\n\r\n  let mobileNoTextHandler = (event) => {\r\n    if (mobileNoErr !== \"\" || mobileNoErr !== null) setMobileNoErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setMobileNo(event.target.value);\r\n  };\r\n\r\n  let emailTextHandler = (event) => {\r\n    if (emailErr !== \"\" || emailErr !== null) setEmailErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  let panNumberTextHandler = (event) => {\r\n    if (panNumberErr !== \"\" || panNumberErr !== null) setPanNumberErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setPanNumber(event.target.value);\r\n  };\r\n\r\n  let genderTextHandler = (event) => {\r\n    if (genderErr !== \"\" || genderErr !== null) setGenderErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setGender(event.target.value);\r\n  };\r\n\r\n  let userNameTextHandler = (event) => {\r\n    if (userNameErr !== \"\" || userNameErr !== null) setUserNameErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setUserName(event.target.value);\r\n  };\r\n\r\n  let passwordTextHandler = (event) => {\r\n    if (passwordErr !== \"\" || passwordErr !== null) setPasswordErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  let projectIdTextHandler = (event) => {\r\n    if (projectIdErr !== \"\" || projectIdErr !== null) setProjectIdErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setProjectId(event.target.value);\r\n  };\r\n\r\n  let departmentIdTextHandler = (event) => {\r\n    if (departmentIdErr !== \"\" || departmentIdErr !== null)\r\n      setDepartmentIdErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setDepartmentId(event.target.value);\r\n  };\r\n\r\n  let isManagerTextHandler = (event) => {\r\n    if (isManagerErr !== \"\" || isManagerErr !== null) setIsManagerErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setIsManager(event.target.value);\r\n  };\r\n\r\n  let managerIdTextHandler = (event) => {\r\n    if (managerIdErr !== \"\" || managerIdErr !== null) setManagerIdErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setManagerId(event.target.value);\r\n  };\r\n\r\n  let skillIdTextHandler = (event) => {\r\n    if (skillIdErr !== \"\" || skillIdErr !== null) setSkillIdErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setSkillId(event.target.value);\r\n  };\r\n\r\n  let resumeTextHandler = (event) => {\r\n    if (resumeErr !== \"\" || resumeErr !== null) setResumeErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setResume(event.target.value);\r\n  };\r\n\r\n  let isTaggedTextHandler = (event) => {\r\n    if (isTaggedErr !== \"\" || isTaggedErr !== null) setIsTaggedErr(\"\");\r\n    // if (successMesg !== \"\" || successMesg !== null) setSuccessMesg(\"\");\r\n    if (errorMesg !== \"\" || errorMesg !== null) setErrorMesg(\"\");\r\n    setIsTagged(event.target.value);\r\n  };\r\n\r\n  let validation = () => {\r\n    setNameErr(\"\");\r\n    setDesignationErr(\"\");\r\n    setDateOfJoiningErr(\"\");\r\n    setMobileNoErr(\"\");\r\n    setEmailErr(\"\");\r\n    setPanNumberErr(\"\");\r\n    setGenderErr(\"\");\r\n    setUserNameErr(\"\");\r\n    setPasswordErr(\"\");\r\n    setProjectIdErr(\"\");\r\n    setDepartmentIdErr(\"\");\r\n    setIsManagerErr(\"\");\r\n    setManagerIdErr(\"\");\r\n    setSkillIdErr(\"\");\r\n    setResumeErr(\"\");\r\n    setIsTaggedErr(\"\");\r\n\r\n    let flag = true;\r\n\r\n    if (name === \"\" || name === null) {\r\n      setNameErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n    if (designation === \"\" || designation === null) {\r\n      setDesignationErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (dateOfJoining === \"\" || dateOfJoining === null) {\r\n      setDateOfJoiningErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (mobileNo === \"\" || mobileNo === null) {\r\n      setMobileNoErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (email === \"\" || email === null) {\r\n      setEmailErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n    if (panNumber === \"\" || panNumber === null) {\r\n      setPanNumberErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (gender === \"\" || gender === null) {\r\n      setGenderErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (userName === \"\" || userName === null) {\r\n      setUserNameErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (password === \"\" || password === null) {\r\n      setPasswordErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (projectId === \"\" || projectId === null) {\r\n      setProjectIdErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (departmentId === \"\" || departmentId === null) {\r\n      setDepartmentIdErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (isManager === \"\" || isManager === null) {\r\n      setIsManagerErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (managerId === \"\" || managerId === null) {\r\n      setManagerIdErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (skillId === \"\" || skillId === null) {\r\n      setSkillIdErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (resume === \"\" || resume === null) {\r\n      setResumeErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (isTagged === \"\" || isTagged === null) {\r\n      setIsTaggedErr(\"This field is compulsory\");\r\n      flag = false;\r\n    }\r\n\r\n    if (flag) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  let addEmployeeDetails = (event) => {\r\n    event.preventDefault();\r\n    if (validation()) {\r\n      setNameErr(\"\");\r\n      setDesignationErr(\"\");\r\n      setDateOfJoiningErr(\"\");\r\n      setMobileNoErr(\"\");\r\n      setEmailErr(\"\");\r\n      setPanNumberErr(\"\");\r\n      setGenderErr(\"\");\r\n      setUserNameErr(\"\");\r\n      setPasswordErr(\"\");\r\n      setProjectIdErr(\"\");\r\n      setDepartmentIdErr(\"\");\r\n      setIsManagerErr(\"\");\r\n      setManagerIdErr(\"\");\r\n      setSkillIdErr(\"\");\r\n      setResumeErr(\"\");\r\n      setIsTaggedErr(\"\");\r\n\r\n      let EmployeeDetails = {\r\n        name,\r\n        designation,\r\n        dateOfJoining,\r\n        mobileNo,\r\n        email,\r\n        panNumber,\r\n        gender,\r\n        userName,\r\n        password,\r\n        projectId,\r\n        departmentId,\r\n        isManager,\r\n        managerId,\r\n        skillId,\r\n        resume,\r\n        isTagged,\r\n      };\r\n\r\n      //   EmployeeService\r\n      //     .addNewEmployee(EmployeeDetails)\r\n      //     .then((response) => {\r\n      //       setName(\"\");\r\n      //       setDesignation(\"\");\r\n      //       setDateOfJoining(\"\");\r\n      //       setMobileNo(\"\");\r\n      //       setEmail(\"\");\r\n      //       setPanNumber(\"\");\r\n      //       setGender(\"\");\r\n      //       setUserName(\"\");\r\n      //       setPassword(\"\");\r\n      //       setProjectId(\"\");\r\n      //       setDepartmentId(\"\");\r\n      //       setIsManager(\"\");\r\n      //       setManagerId(\"\");\r\n      //       setSkillId(\"\");\r\n      //       setResume(\"\");\r\n      //       setIsTagged(\"\");\r\n\r\n      //     })\r\n      //     .catch((error) => {\r\n      //       console.log(error)\r\n      //       //setErrorMesg(error.response.data);\r\n      //     });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid w-50 mt-5 add-details-section\">\r\n        <div className=\"m-3\">\r\n          <h2 className=\"fw-bold mb-2 text-uppercase dashboard-data-section-heading\">\r\n            Add Employee Details\r\n          </h2>\r\n          <p className=\"text-50 text-success mb-3 dashboard-data-section-para\">\r\n            Please fill up the form\r\n          </p>\r\n          <div className=\"border border-1 rounded\">\r\n            <div className=\"m-3\">\r\n              <form onSubmit={addEmployeeDetails}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={name}\r\n                        onChange={nameTextHandler}\r\n                        placeholder=\"Enter Employee Name\"\r\n                      />\r\n                      <label>Employee Name</label>\r\n                      <span className=\"text-danger\">{nameErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={designation}\r\n                        onChange={designationTextHandler}\r\n                        placeholder=\"enter designation\"\r\n                      />\r\n                      <label>Designation</label>\r\n                      <span className=\"text-danger\">{designationErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        value={dateOfJoining}\r\n                        onChange={dateOfJoiningTextHandler}\r\n                        placeholder=\"Enter date Of Joining\"\r\n                      />\r\n                      <label>date Of Joining</label>\r\n                      <span className=\"text-danger\">{dateOfJoiningErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={mobileNo}\r\n                        onChange={mobileNoTextHandler}\r\n                        placeholder=\"mobile no\"\r\n                      />\r\n                      <label>mobile No</label>\r\n                      <span className=\"text-danger\">{mobileNoErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        value={email}\r\n                        onChange={emailTextHandler}\r\n                        placeholder=\"Enter emailId\"\r\n                      />\r\n                      <label>email Id</label>\r\n                      <span className=\"text-danger\">{emailErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={gender}\r\n                        onChange={genderTextHandler}\r\n                        placeholder=\"Enter PanNumber\"\r\n                      />\r\n                      <label>Gender</label>\r\n                      <span className=\"text-danger\">{genderErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={userName}\r\n                        onChange={userNameTextHandler}\r\n                        placeholder=\"enter username\"\r\n                      />\r\n                      <label>userName</label>\r\n                      <span className=\"text-danger\">{userNameErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        value={password}\r\n                        onChange={passwordTextHandler}\r\n                        placeholder=\"Enter Password\"\r\n                      />\r\n                      <label>password</label>\r\n                      <span className=\"text-danger\">{passwordErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={projectId}\r\n                        onChange={projectIdTextHandler}\r\n                        placeholder=\"Enter Project Id\"\r\n                      />\r\n                      <label>project Id</label>\r\n                      <span className=\"text-danger\">{projectIdErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={departmentId}\r\n                        onChange={departmentIdTextHandler}\r\n                        placeholder=\"Enter departmenr id\"\r\n                      />\r\n                      <label>department Id</label>\r\n                      <span className=\"text-danger\">{departmentIdErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={isManager}\r\n                        onChange={isManagerTextHandler}\r\n                        placeholder=\"Enter IsManager\"\r\n                      />\r\n                      <label>isManager</label>\r\n                      <span className=\"text-danger\">{isManagerErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={managerId}\r\n                        onChange={managerIdTextHandler}\r\n                        placeholder=\"Enter Manager id\"\r\n                      />\r\n                      <label>Manager Id</label>\r\n                      <span className=\"text-danger\">{managerIdErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={resume}\r\n                        onChange={resumeTextHandler}\r\n                        placeholder=\"Enter resume\"\r\n                      />\r\n                      <label>resume</label>\r\n                      <span className=\"text-danger\">{resumeErr}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={isTagged}\r\n                        onChange={isTaggedTextHandler}\r\n                        placeholder=\"Enter isTagged\"\r\n                      />\r\n                      <label>isTagged</label>\r\n                      <span className=\"text-danger\">{isTaggedErr}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* <div className=\"form-floating mb-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        value={panNumber}\r\n                        onChange={panNumberTextHandler}\r\n                        placeholder=\"Enter PanNumber\"\r\n                      />\r\n                      <label>panNumber</label>\r\n                      <span className=\"text-danger\">{panNumberErr}</span>\r\n                    </div> */}\r\n\r\n                <div className=\"row g-1\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Add Employee\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          {/* <span className=\"text-success\">\r\n                <b>{successMesg}</b>\r\n              </span>\r\n              <span className=\"text-danger\">\r\n                <b>{errorMesg}</b>\r\n              </span> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEmployees;\r\n","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Skills\\skill.js",["91","92","93"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SkillService from \"../../Services/SkillService\";\r\n//import SkillService from \"../../Services/SkillService\";\r\n\r\n\r\nconst AddSkills = () => {\r\n    \r\n    // let studentId = window.sessionStorage.getItem(\"id\");\r\n\r\n    \r\n    const [skillId, setSkillId] = useState(\"\");\r\n    const [skill, setSkill] = useState(\"\");\r\n    const [employeeId, setEmployeeId] = useState(\"\");\r\n    const [dateOfCompletion, setDateOfCompletion] = useState(\"\");\r\n    const [certificationLink, setCertificationLink] = useState(\"\");\r\n    const [certificatePdf, setCertificatePdf] = useState(\"\");\r\n    const [technologyId, setTechnologyId] = useState(\"\");\r\n\r\n    \r\n    const [skillIdErr, setSkillIdErr] = useState(\"\");\r\n    const [skillErr, setSkillErr] = useState(\"\");\r\n    const [employeeIdErr, setEmployeeIdErr] = useState(\"\");\r\n    const [dateOfCompletionErr, setDateOfCompletionErr] = useState(\"\");\r\n    const [certificationLinkErr, setCertificationLinkErr] = useState(\"\");\r\n    const [certificatePdfErr, setCertificatePdfErr] = useState(\"\");\r\n    const [technologyIdErr, setTechnologyIdErr] = useState(\"\");\r\n\r\n    \r\n    // const [show, setShow] = useState(\"\");\r\n    // const [show1, setShow1] = useState(\"\");\r\n     const [error, setError] = useState(\"\");\r\n    // const [disable, setDisable] = useState(\"\")\r\n\r\n    const [skills, setSkills] = useState([]);\r\n\r\n    // const init = () => {\r\n    //     StudentService.getEducationDetailsOfStudent(studentId).then(response => {\r\n    //         console.log(response.data);\r\n    //         setEducations(response.data);\r\n    //     }).catch(err => {\r\n    //         console.log(err);\r\n    //     })\r\n    // }\r\n    // useEffect(() => {\r\n    //     init();\r\n    //     AdminService.getAcademicDates().then(resp => {\r\n    //         let updationDate = resp.data.updationDate;\r\n    //         let resultDate = resp.data.resultDate;\r\n    //         if (((Date.parse(updationDate)) <= (Date.parse(new Date())))||((Date.parse(resultDate)) <= (Date.parse(new Date())))) {\r\n    //             setDisable(\"Disabled\");\r\n    //         }\r\n    //         else {\r\n    //             setDisable(\"\");\r\n    //         }\r\n    //     }).catch(err => {\r\n    //         console.log(err);\r\n    //     })\r\n    // }, []);\r\n\r\n   \r\n\r\n    let skillIdHandler = (event) => {\r\n        setSkillId(event.target.value);\r\n        if (skillIdErr !== \"\" || skillIdErr !== null) {\r\n            setSkillIdErr(\"\");\r\n        }\r\n    }\r\n\r\n    let skillHandler = (event) => {\r\n        setSkill(event.target.value);\r\n        if (skillErr !== \"\" || skillErr !== null) {\r\n            setSkillErr(\"\");\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n\r\n    let employeeIdHandler = (event) => {\r\n        setEmployeeId(event.target.value);\r\n        if (employeeIdErr !== \"\" || employeeIdErr !== null) {\r\n            setEmployeeIdErr(\"\");\r\n        }\r\n    }\r\n\r\n    let dateOfCompletionHandler = (event) => {\r\n        setDateOfCompletion(event.target.value);\r\n        if (dateOfCompletionErr !== \"\" || dateOfCompletionErr !== null) {\r\n            setDateOfCompletionErr(\"\");\r\n        }\r\n    }\r\n\r\n    \r\n    let certificationLinkHandler = (event) => {\r\n        setCertificationLink (event.target.value);\r\n        if (certificationLinkErr !== \"\" || certificationLinkErr !== null) {\r\n            setCertificationLinkErr(\"\");\r\n        }\r\n    }\r\n\r\n    let certificatePdfHandler = (event) => {\r\n        setCertificatePdf (event.target.value);\r\n        if (certificatePdfErr !== \"\" || certificatePdfErr !== null) {\r\n            setCertificatePdfErr(\"\");\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    let technologyIdHandler = (event) => {\r\n        setTechnologyId(event.target.value);\r\n        if (technologyIdErr !== \"\" || technologyIdErr !== null) {\r\n            setTechnologyIdErr(\"\");\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    \r\n  \r\n\r\n    let validation = () => {\r\n        \r\n        let flag = true;\r\n        \r\n\r\n        if (skillId === \"\" || skillId === null) {\r\n            setSkillIdErr(\"Please select correct Skill Id\");\r\n            flag = false;\r\n        }\r\n\r\n        if (skill === \"\" || skill === null) {\r\n            setSkillErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n          if (employeeId === \"\" || employeeId === null) {\r\n            setEmployeeIdErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n      \r\n          if (dateOfCompletion === \"\" || dateOfCompletion === null) {\r\n            setDateOfCompletionErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n\r\n          if (certificationLink === \"\" || certificationLink === null) {\r\n            setCertificationLinkErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n          if (certificatePdf === \"\" || certificatePdf === null) {\r\n            setCertificatePdfErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n      \r\n          if (technologyId === \"\" || technologyId === null) {\r\n            setTechnologyIdErr(\"This field is compulsory\");\r\n            flag = false;\r\n          }\r\n      \r\n      \r\n\r\n        \r\n\r\n        if (flag)\r\n            return true;\r\n\r\n    }\r\n\r\n    let handleDelete = (skillId) => {\r\n        //if (disable === \"\") {\r\n            SkillService.deleteSkills(skillId).then(resp=> {\r\n            // StudentService.deleteEducation(educationId, studentId).then(resp => {\r\n                console.log(resp.data);\r\n                // init();\r\n                // setShow1(\"show\");\r\n                setTimeout(() => {\r\n                    // setShow1(\"\");\r\n                    clearTimeout();\r\n                }, 3000);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    //     else {\r\n    //         alert(\"Last Date for Updating Student Details is OVER..\");\r\n    //     }\r\n     \r\n\r\n\r\n    let onAddSkillsSubmit = (event) => {\r\n        event.preventDefault();\r\n        // if (disable === \"\") {\r\n            if (validation()) {\r\n                setSkillIdErr(\"\");\r\n                setSkillErr(\"\");\r\n                setEmployeeIdErr(\"\");\r\n                setDateOfCompletionErr(\"\");\r\n                setCertificationLinkErr(\"\");\r\n                setCertificatePdfErr(\"\");\r\n                setTechnologyIdErr(\"\");\r\n                console.log(\"....\" + skillId);\r\n                let skill = { \"skillId\": skillId, \"skill\": skill, \"employeeId\": employeeId, \"dateOfCompletion\": dateOfCompletion, \"certificationLink\": certificationLink, \"certificatePdf\": certificatePdf, \"technologyId\":technologyId };\r\n                console.log(skill);\r\n\r\n                let skillDetails = {\r\n                    skillId,\r\n                    skill,\r\n                    employeeId,\r\n                    dateOfCompletion,\r\n                    certificationLink,\r\n                    certificatePdf,\r\n                    technologyId,\r\n                  };\r\n                \r\n                SkillService.AddSkills(skillDetails).then(response => {\r\n                    //console.log(\"Education Added\", response.data);\r\n                    setSkillIdErr(\"\");\r\n                    setSkillErr(\"\");\r\n                    setEmployeeIdErr(\"\");\r\n                    setDateOfCompletionErr(\"\");\r\n                    setCertificationLinkErr(\"\");\r\n                    setCertificatePdfErr(\"\");\r\n                    setTechnologyIdErr(\"\");\r\n                    // init();\r\n                    // setShow(\"show\");\r\n                    // setTimeout(function () { setShow(\"\"); clearTimeout(); }, 3000)\r\n                }).catch(err => {\r\n                    console.log(\"Error found\", err);\r\n                    setError(\"Something went wrong\");\r\n                })\r\n\r\n            }\r\n        }\r\n        \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"container-fluid w-50 mt-5 add-qualification-details\">\r\n            <div className=\"m-3\">\r\n                <h2 className=\"fw-bold mb-2 text-uppercase dashboard-data-section-heading\">Skills</h2>\r\n                <p className=\"text-50 text-success mb-3 dashboard-data-section-para\">Please enter skill Details</p>\r\n                <div className=\"border border-1 rounded\">\r\n                    <div className=\"m-3\">\r\n                        <form onSubmit={onAddSkillsSubmit} className=\"department-form\">\r\n                            <div className=\"form-floating mb-3\">\r\n                                <input type=\"number\" className=\"form-control\"\r\n                                    value={skillId}\r\n                                    onChange={skillIdHandler}\r\n                                    placeholder=\"Enter Skill Id\"\r\n                                />\r\n                                <label>Skill Id</label>\r\n                                <span className=\"text-danger\">{skillIdErr}</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-floating mb-3\">\r\n                                <input type=\"number\" className=\"form-control\" \r\n                                    value={skill}\r\n                                    onChange={skillHandler}\r\n                                    placeholder=\"enter skill\"   \r\n                                />\r\n                                <label> Skill </label>\r\n                                <span className=\"text-danger\">{skillErr}</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-floating mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={employeeId}\r\n                                onChange={employeeIdHandler}\r\n                                placeholder=\"Enter Employee Id\"    \r\n                            />\r\n                            <label>Employee Id </label>\r\n                            <span className=\"text-danger\">{employeeIdErr}</span>\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                value={dateOfCompletion}\r\n                                onChange={dateOfCompletionHandler}\r\n                                placeholder=\"Date Of Completion\"\r\n                            />\r\n                            <label>Date Of Completion</label>\r\n                            <span className=\"text-danger\">{dateOfCompletionErr}</span>\r\n                            </div>\r\n                            <div className=\"form-floating mb-3\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                value={certificationLink}\r\n                                onChange={certificationLinkHandler}\r\n                                placeholder=\"Certification Link\"\r\n                            />\r\n                            <label>Certification Link</label>\r\n                            <span className=\"text-danger\">{certificationLinkErr}</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-floating mb-3\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                value={certificatePdf}\r\n                                onChange={certificatePdfHandler}\r\n                                placeholder=\"Certificate Pdf\"\r\n                            />\r\n                            <label>Certificate Pdf</label>\r\n                            <span className=\"text-danger\">{certificatePdfErr}</span>\r\n                            </div>\r\n\r\n                            <div className=\"form-floating mb-3\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                value={technologyId}\r\n                                onChange={technologyIdHandler}\r\n                                placeholder=\"Technology Id\"\r\n                            />\r\n                            <label>Technology Id</label>\r\n                            <span className=\"text-danger\">{technologyIdErr}</span>\r\n                            </div>\r\n\r\n                            <div className=\"row g-1\">\r\n                            <button type=\"submit\" className=\"btn btn-primary\"> Add Skills </button>\r\n                            </div>\r\n\r\n                                {/* <div className=\"form-floating mb-3\">\r\n                                    <select className=\"form-select\" value={name} onChange={onNameHandler} disabled={disable}>\r\n                                        <option value=\"\" selected>--SELECT--</option>\r\n                                        <option value=\"SSC\">Department 1</option>\r\n                                        <option value=\"HSC\">Department 2</option>\r\n                                    </select>\r\n                                    <label>Department</label>\r\n                                    <span className=\"text-danger\">{nameErr}</span>\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type=\"text\" className=\"form-control\" value={institute} onChange={instituteHandler} placeholder=\"Enter Institute\" disabled={disable} />\r\n                                    <label>Name of your Institute</label>\r\n                                    <span className=\"text-danger\">{instituteErr}</span>\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <input type=\"text\" className=\"form-control\" value={percentage} onChange={percentageHandler} placeholder=\"Enter Percentage\" disabled={disable} />\r\n                                    <label>Percentage</label>\r\n                                    <span className=\"text-danger\">{percentageErr}</span>\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <select className=\"form-select\" value={yop} onChange={yopHandler} disabled={disable}>\r\n                                        <option value=\"\" selected>--SELECT--</option>\r\n                                        {yearArray.map((ele, key) => {\r\n                                            return (\r\n                                                <option value={ele}>{ele}</option>\r\n                                            );\r\n                                        })}\r\n                                    </select>\r\n                                    <label>Year of Passing</label>\r\n                                    <span className=\"text-danger\">{yopErr}</span>\r\n                                </div>\r\n                                <div className=\"row g-1\">\r\n                                    <button type=\"submit\" className=\"btn1 primary1\">Add Qualification</button>\r\n                                </div> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <span className=\"text-danger\">{error}</span>\r\n                {/* <div className={show} id=\"snackbar\">Education Details Added Successfully<output></output></div>\r\n                <div className={show1} id=\"snackbar\">Education Details Deleted<output></output></div> */}\r\n            </div>\r\n\r\n            <hr />\r\n            <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>Skill Id</th>\r\n                        <th>Skill</th>\r\n                        <th>Employee Id</th>\r\n                        <th>Date Of Completion</th>\r\n                        <th>Certification Link</th>\r\n                        <th>Certificate Pdf</th>\r\n                        <th>Technology Id</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        skills.map(skill => (\r\n                            <tr key={skills.skillId}>\r\n                                <td>{skills.skill}</td>\r\n                                <td>{skills.employeeId}</td>\r\n                                <td>{skills.dateOfCompletion}</td>\r\n                                <td>{skills.certificationLink}</td>\r\n                                <td>{skills.certificatePdf}</td>\r\n                                <td>{skills.technologyId}</td>\r\n                               <td>\r\n                                    <center><button className=\"btn1 primary1 rounded\" onClick={() => {\r\n                                        handleDelete(skills.skillId);\r\n                                    }}>Delete</button></center>\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default AddSkills;","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\SkillService.js",["94"],[],"import axios from \"axios\";\r\n\r\nconst Project_BASE_REST_API_URL = \"http://localhost:8082/admin/\";\r\n\r\n// class ProjectService{\r\n\r\n//     getAllProjects(){\r\n//         return axios.get(Project_BASE_REST_API_URL + 'projects')\r\n//     }\r\n\r\n// }\r\nconst getAllSkills = () => {\r\n  return axios.get(Project_BASE_REST_API_URL + \"skills\");\r\n};\r\nconst AddSkills = (skillDetails) => {\r\n  return axios.post(Project_BASE_REST_API_URL + \"addskills\",\r\n    skillDetails\r\n  );\r\n};\r\n\r\nconst deleteSkills = (skillId) => {\r\n  return axios.delete(\r\n    Project_BASE_REST_API_URL + \"deleteskills\",\r\n    skillId\r\n  );\r\n};\r\n// export default new ProjectService();\r\nexport default { getAllSkills, AddSkills, deleteSkills };\r\n","C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Technology\\AddTechnology.jsx",[],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\Departments\\AddDepartment.js",["95"],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\DepartmentService.js",["96"],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\Services\\TechnologyService.js",["97"],[],"C:\\Users\\DELL\\Desktop\\EmpProject\\frontend-employee-project-mapping-system\\src\\components\\AdminDashboard\\AdminDashboard.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],[],{"ruleId":"130","severity":1,"message":"131","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":23},{"ruleId":"130","severity":1,"message":"134","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":13},{"ruleId":"130","severity":1,"message":"135","line":1,"column":26,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":21,"column":1,"nodeType":"138","endLine":21,"endColumn":47},{"ruleId":"130","severity":1,"message":"135","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"139","line":77,"column":7,"nodeType":"132","messageId":"133","endLine":77,"endColumn":27},{"ruleId":"130","severity":1,"message":"140","line":134,"column":7,"nodeType":"132","messageId":"133","endLine":134,"endColumn":25},{"ruleId":"130","severity":1,"message":"141","line":278,"column":11,"nodeType":"132","messageId":"133","endLine":278,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":19},{"ruleId":"130","severity":1,"message":"142","line":35,"column":20,"nodeType":"132","messageId":"133","endLine":35,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":204,"column":60,"nodeType":"132","messageId":"145","endLine":204,"endColumn":65},{"ruleId":"136","severity":1,"message":"137","line":28,"column":1,"nodeType":"138","endLine":28,"endColumn":58},{"ruleId":"146","severity":1,"message":"147","line":37,"column":8,"nodeType":"148","endLine":37,"endColumn":10,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"137","line":28,"column":1,"nodeType":"138","endLine":28,"endColumn":71},{"ruleId":"136","severity":1,"message":"137","line":17,"column":1,"nodeType":"138","endLine":17,"endColumn":72},{"ruleId":"130","severity":1,"message":"135","line":1,"column":15,"nodeType":"132","messageId":"133","endLine":1,"endColumn":24},{"ruleId":"130","severity":1,"message":"150","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":21},{"ruleId":"130","severity":1,"message":"151","line":10,"column":27,"nodeType":"132","messageId":"133","endLine":10,"endColumn":43},{"ruleId":"130","severity":1,"message":"152","line":11,"column":26,"nodeType":"132","messageId":"133","endLine":11,"endColumn":40},{"ruleId":"130","severity":1,"message":"153","line":12,"column":25,"nodeType":"132","messageId":"133","endLine":12,"endColumn":39},{"ruleId":"130","severity":1,"message":"154","line":13,"column":27,"nodeType":"132","messageId":"133","endLine":13,"endColumn":43},{"ruleId":"130","severity":1,"message":"155","line":15,"column":24,"nodeType":"132","messageId":"133","endLine":15,"endColumn":38},{"ruleId":"156","severity":2,"message":"157","line":27,"column":13,"nodeType":"132","messageId":"158","endLine":27,"endColumn":27},{"ruleId":"156","severity":2,"message":"159","line":36,"column":13,"nodeType":"132","messageId":"158","endLine":36,"endColumn":27},{"ruleId":"156","severity":2,"message":"160","line":38,"column":9,"nodeType":"132","messageId":"158","endLine":38,"endColumn":26},{"ruleId":"156","severity":2,"message":"157","line":43,"column":13,"nodeType":"132","messageId":"158","endLine":43,"endColumn":27},{"ruleId":"156","severity":2,"message":"161","line":94,"column":14,"nodeType":"132","messageId":"158","endLine":94,"endColumn":20},{"ruleId":"162","severity":2,"message":"163","line":94,"column":25,"nodeType":"164","messageId":"165","endLine":94,"endColumn":33},{"ruleId":"156","severity":2,"message":"166","line":97,"column":52,"nodeType":"132","messageId":"158","endLine":97,"endColumn":69},{"ruleId":"156","severity":2,"message":"167","line":97,"column":80,"nodeType":"132","messageId":"158","endLine":97,"endColumn":91},{"ruleId":"162","severity":2,"message":"168","line":97,"column":94,"nodeType":"164","messageId":"165","endLine":97,"endColumn":114},{"ruleId":"156","severity":2,"message":"169","line":98,"column":27,"nodeType":"132","messageId":"158","endLine":98,"endColumn":37},{"ruleId":"156","severity":2,"message":"170","line":100,"column":75,"nodeType":"132","messageId":"158","endLine":100,"endColumn":86},{"ruleId":"162","severity":2,"message":"171","line":100,"column":89,"nodeType":"164","messageId":"165","endLine":100,"endColumn":96},{"ruleId":"172","severity":1,"message":"173","line":102,"column":21,"nodeType":"174","endLine":102,"endColumn":137},{"ruleId":"162","severity":2,"message":"175","line":103,"column":26,"nodeType":"164","messageId":"165","endLine":103,"endColumn":40},{"ruleId":"176","severity":2,"message":"177","line":104,"column":89,"nodeType":"132","messageId":"178","endLine":104,"endColumn":93},{"ruleId":"156","severity":2,"message":"179","line":116,"column":39,"nodeType":"132","messageId":"158","endLine":116,"endColumn":49},{"ruleId":"156","severity":2,"message":"180","line":120,"column":38,"nodeType":"132","messageId":"158","endLine":120,"endColumn":56},{"ruleId":"156","severity":2,"message":"181","line":124,"column":38,"nodeType":"132","messageId":"158","endLine":124,"endColumn":52},{"ruleId":"172","severity":1,"message":"182","line":132,"column":29,"nodeType":"174","endLine":132,"endColumn":184},{"ruleId":"176","severity":2,"message":"177","line":133,"column":42,"nodeType":"132","messageId":"178","endLine":133,"endColumn":46},{"ruleId":"156","severity":2,"message":"183","line":139,"column":108,"nodeType":"132","messageId":"158","endLine":139,"endColumn":119},{"ruleId":"156","severity":2,"message":"184","line":146,"column":22,"nodeType":"132","messageId":"158","endLine":146,"endColumn":26},{"ruleId":"162","severity":2,"message":"185","line":146,"column":31,"nodeType":"164","messageId":"165","endLine":146,"endColumn":35},{"ruleId":"156","severity":2,"message":"186","line":151,"column":37,"nodeType":"132","messageId":"158","endLine":151,"endColumn":41},{"ruleId":"156","severity":2,"message":"187","line":152,"column":37,"nodeType":"132","messageId":"158","endLine":152,"endColumn":42},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'panNumberTextHandler' is assigned a value but never used.","'skillIdTextHandler' is assigned a value but never used.","'EmployeeDetails' is assigned a value but never used.","'setSkills' is assigned a value but never used.","no-use-before-define","'skill' was used before it was defined.","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["188"],"'AddTechnology' is defined but never used.","'setAddDepartment' is assigned a value but never used.","'setAddEmployee' is assigned a value but never used.","'setAddProjects' is assigned a value but never used.","'setAddTechnology' is assigned a value but never used.","'setProjectlist' is assigned a value but never used.","no-undef","'setProjectList' is not defined.","undef","'setTechnologys' is not defined.","'setListOfProjects' is not defined.","'logOut' is not defined.","react/jsx-no-undef","'Navigate' is not defined.","JSXIdentifier","undefined","'sidebarTogglerRef' is not defined.","'showSidebar' is not defined.","'MdVerticalDistribute' is not defined.","'sidebarRef' is not defined.","'hideSidebar' is not defined.","'ImCross' is not defined.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FaUserGraduate' is not defined.","no-restricted-globals","Unexpected use of 'name'.","defaultMessage","'showCourse' is not defined.","'showListOfStudents' is not defined.","'showResultPage' is not defined.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'logoutClick' is not defined.","'home' is not defined.","'Home' is not defined.","'show' is not defined.","'show2' is not defined.",{"desc":"189","fix":"190"},"Update the dependencies array to be: [init]",{"range":"191","text":"192"},[1381,1383],"[init]"]